<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.example.mapper.UserMapper">

<select id="readAuthorities" parameterType="String" resultType="org.springframework.security.core.authority.SimpleGrantedAuthority">
	SELECT u_auth
	FROM user_auth
	WHERE 1=1
	AND u_id = #{username}
</select>

<select id="readUser" parameterType="String" resultType="User">
	SELECT  user_id 					as username,
		    user_passwd					as password,	
		    user_name,
		   	u_isAccountNonExpired 		as 	isAccountNonExpired,
     		u_isAccountNonLocked 		as 	isAccountNonLocked,
       		u_isCredentialNonExpired 	as 	isCredentialsNonExpired,
        	u_isEnabled 				as 	isEnabled
    FROM	User
    WHERE 1=1
    AND user_id = #{username}

</select>


<!-- 회원 정보 불러오기(새로고침) -->
<select id="readUser_refresh" resultType="UserInfo">
			SELECT 
				ta.user_id	username ,
				ta.user_name user_name,
				tb.u_auth	auth	
			FROM user ta
					LEFT JOIN ( 
						SELECT ta.u_id,
								GROUP_CONCAT(ta.u_auth SEPARATOR ",") u_auth
						FROM 	user_auth	ta
						GROUP BY	 ta.u_id
								) tb ON ta.user_id=tb.u_id
			WHERE	ta.user_id = #{username}

</select>



<!-- 권한 읽기 (새로고침) 
<select id="readAuthorities_refresh" parameterType="String" resultType="org.springframework.security.core.authority.SimpleGrantedAuthority">
	SELECT	u_auth
	FROM	user_auth
	WHERE 	1 = 1
	AND		u_id = #{username}

</select>
-->

<insert id="createUser" parameterType="User">
	INSERT INTO User (
		user_id,
		user_name,
		user_passwd,
		u_isAccountNonExpired,
		u_isAccountNonLocked,
		u_isCredentialNonExpired,
		u_isEnabled
	) VALUES (
		#{username},
		#{user_name},
		#{password},
		#{isAccountNonExpired},
		#{isAccountNonLocked},
		#{isCredentialsNonExpired},
		#{isEnabled}
	)
</insert>

<insert id="createAuthority" parameterType="org.springframework.security.core.GrantedAuthority">
	INSERT INTO user_auth (
		u_id,
		u_auth
	) VALUES
	<foreach item="authority" index="index" collection="authorities" separator=",">
		(#{username}, #{authority.role})
	</foreach>
	ON DUPLICATE KEY
		UPDATE
		u_id = #{username}
</insert>

</mapper>